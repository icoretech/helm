nameOverride: ""
fullnameOverride: ""

web:
  imagePullPolicy: IfNotPresent
  imagePullSecrets: "" # must be present in namespace
  image: ghcr.io/icoretech/chatgpt-retrieval-plugin-docker:postgres-9969191-1685433326
  terminationGracePeriodSeconds: 0
  replicaCount: 1

  config:
    # aiPluginJson:
    #   schema_version: "v1"
    #   name_for_model: "retrieval"
    #   name_for_human: "Retrieval Plugin"
    #   description_for_model: "Plugin for searching through the user's documents (such as files, emails, and more) to find answers to questions and retrieve relevant information. Use it whenever a user asks something that might be found in their personal information."
    #   description_for_human: "Search through your documents."
    #   auth:
    #     type: "none"
    #   api:
    #     type: "openapi"
    #     url: "https://mychatgpt.zyx/.well-known/openapi.yaml"
    #   logo_url: "https://mychatgpt.zyx/.well-known/logo.png"
    #   contact_email: "hello@mychatgpt.zyx"
    #   legal_info_url: "https://mychatgpt.zyx/legal"

    # openApiYaml: |
    #   openapi: 3.0.2
    #   info:
    #     title: Retrieval Plugin API
    #     description: A retrieval API for querying and filtering documents based on natural language queries and metadata
    #     version: 1.0.0
    #   servers:
    #     - url: https://your-app-url.com


  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  hpa:
    enabled: false
    maxReplicas: 10
    # average total CPU usage per pod (1-100)
    cpu:
    # average memory usage per pod (100Mi-1Gi)
    memory:
    # average http requests per second per pod (k8s-prometheus-adapter)
    requests:

  ingress:
    enabled: false
    ingressClassName: nginx
    annotations: {}
    hosts: []
    tls: []

  service:
    enabled: true
    type: ClusterIP
    port: 8080
    # nodePort: 31198
    annotations: {}

  livenessProbe:
    enabled: false # there are no health checks atm
    httpGet:
      httpHeaders: []
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2
    successThreshold: 1
  readinessProbe:
    enabled: false # there are no health checks atm
    httpGet:
      httpHeaders: []
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2
    successThreshold: 1

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  extraEnvs: []
  # extraEnvs:
  #   - name: DATASTORE
  #     value: "xxxx"
  #   - name: BEARER_TOKEN
  #     value: "xxxxx"
  #   - name: OPENAI_API_KEY
  #     value: "xxxxx"
  extraEnvFromSecret: []
  # extraEnvFromSecret:
  #   - custom-secret    
