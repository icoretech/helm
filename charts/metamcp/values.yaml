# Default values for metamcp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/metatool-ai/metamcp
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 12008

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: metamcp.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

gatewayAPI:
  enabled: false
  # HTTPRoute parents, e.g.:
  # parents:
  #   - name: my-shared-gateway
  #     namespace: gateway-system
  #     sectionName: http
  hosts: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # Optional memory target (utilization %)
  targetMemoryUtilizationPercentage: null

nodeSelector: {}
tolerations: []
affinity: {}

# Extra env as ConfigMap
env: {}

# Additional env vars (list style)
extraEnv: []
# - name: LOG_LEVEL
#   value: debug
extraEnvFrom: []
# - secretRef:
#     name: my-extra-secret

# Minimal Postgres for local/dev. Disable in prod to point at external DB
postgres:
  enabled: true
  image: postgres:16
  auth:
    database: metamcp
    username: metamcp
    password: metamcp
  persistence:
    enabled: false
    size: 1Gi
    storageClassName: ""

# Use an external Postgres instead of the in-chart one
externalPostgres:
  enabled: false
  host: ""
  port: 5432
  database: ""
  username: ""
  passwordSecretRef: {}
    # name: my-pg-secret
    # key: password

# Authentication settings for MetaMCP
auth:
  # If set, chart will create a secret and inject BETTER_AUTH_SECRET unless
  # overridden in values.env.BETTER_AUTH_SECRET.
  betterAuthSecret: ""

# Optional bootstrap via a post-install Job (disabled by default)
# NOTE: MetaMCP currently emphasizes UI/API provisioning. These values
# are rendered to /cfg/bootstrap.json and printed by the Job in 'print' mode.
# When upstream admin API routes are finalized, mode 'apply' will
# POST these resources automatically.
bootstrap:
  enabled: false
  mode: apply   # apply | print (print for debugging only)
  admin:
    username: admin
    password: admin
  # Servers follow the MetaMCP Import JSON shape (examples in examples/values-bootstrap.yaml)
  servers: []
  # Namespace definition and the server names to include
  namespace:
    name: ""
    servers: []
  # Endpoint bound to the namespace
  endpoint:
    name: ""
    transport: sse   # sse | streamable
    auth: {}

# Generalized provisioning (multiple servers, namespaces, endpoints)
provision:
  enabled: false
  # servers: list of server specs (SSE/STREAMABLE_HTTP/STDIO)
  servers: []
  # - name: aws-docs
  #   type: STREAMABLE_HTTP   # or SSE or STDIO
  #   url: http://my-aws-docs.svc.cluster.local:3000/mcp
  #   bearerToken: ""
  #   headers: { Accept: application/json }
  # - name: stdio-everything
  #   type: STDIO
  #   command: ["npx","-y","@modelcontextprotocol/server-everything","streamableHttp"]
  #   args: []
  #   env: { LOG_LEVEL: debug }

  # namespaces: list of { name, servers: [<server-names>] }
  namespaces: []
  # - name: lab
  #   servers: ["aws-docs","stdio-everything"]

  # endpoints: list of { name, namespace, transport, enableApiKeyAuth, enableOauth, useQueryParamAuth }
  endpoints: []
  # - name: lab
  #   namespace: lab
  #   transport: SSE   # or STREAMABLE_HTTP
  #   enableApiKeyAuth: true
  #   enableOauth: false
  #   useQueryParamAuth: false

# Global: disable public sign-up in MetaMCP (performed by user-bootstrap job if any users are defined)
disablePublicSignup: false

# Optional list of users to seed into MetaMCP (post-install/upgrade Job)
# Each item supports:
# - email (string) – required
# - password (string) – required
# - name (string) – required by MetaMCP sign-up
# - role (string: user|admin) – reserved for future if MetaMCP exposes it
# - createApiKey (bool) – when true, create an API key for the user
# - apiKeyName (string) – optional name for the API key
users: []
# - email: admin@example.com
#   password: change-me
#   name: Admin
#   role: user
#   createApiKey: true
#   apiKeyName: cli
