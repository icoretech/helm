1. Get the MCP endpoint URL by running these commands:
{{- if .Values.httpRoute.enabled }}
{{- if .Values.httpRoute.hostnames }}
    export APP_HOSTNAME={{ .Values.httpRoute.hostnames | first }}
{{- else }}
    export APP_HOSTNAME=$(kubectl get --namespace {{(first .Values.httpRoute.parentRefs).namespace | default .Release.Namespace }} gateway/{{ (first .Values.httpRoute.parentRefs).name }} -o jsonpath="{.spec.listeners[0].hostname}")
  {{- end }}
{{- if and .Values.httpRoute.rules (first .Values.httpRoute.rules).matches (first (first .Values.httpRoute.rules).matches).path.value }}
    {{- $path := (first (first .Values.httpRoute.rules).matches).path.value -}}
    {{- if eq .Values.transport.type "http-sse" }}
    echo "MCP streamable HTTP (SSE): http://$APP_HOSTNAME{{$path}}{{ .Values.transport.http.path }}"
    {{- else if eq .Values.transport.type "websocket" }}
    echo "MCP WebSocket: ws://$APP_HOSTNAME{{$path}}{{ .Values.transport.http.wsPath }}"
    {{- else }}
    echo "Service reachable at: http://$APP_HOSTNAME{{$path}}"
    {{- end }}

    NOTE: Your HTTPRoute depends on the listener configuration of your gateway and your HTTPRoute rules.
    The rules can be set for path, method, header and query parameters.
    You can check the gateway configuration with 'kubectl get --namespace {{(first .Values.httpRoute.parentRefs).namespace | default .Release.Namespace }} gateway/{{ (first .Values.httpRoute.parentRefs).name }} -o yaml'
{{- end }}
{{- else if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  {{- if eq $.Values.transport.type "websocket" -}}
  ws{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}{{ $.Values.transport.http.wsPath }}
  {{- else -}}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}{{ $.Values.transport.http.path }}
  {{- end }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "mcp-server.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  {{- if eq .Values.transport.type "websocket" -}}
  echo ws://$NODE_IP:$NODE_PORT{{ .Values.transport.http.wsPath }}
  {{- else -}}
  echo http://$NODE_IP:$NODE_PORT{{ .Values.transport.http.path }}
  {{- end }}
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "mcp-server.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "mcp-server.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  {{- if eq .Values.transport.type "websocket" -}}
  echo ws://$SERVICE_IP:{{ .Values.service.port }}{{ .Values.transport.http.wsPath }}
  {{- else -}}
  echo http://$SERVICE_IP:{{ .Values.service.port }}{{ .Values.transport.http.path }}
  {{- end }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "mcp-server.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  {{- if eq .Values.transport.type "websocket" -}}
  echo "Visit ws://127.0.0.1:8080{{ .Values.transport.http.wsPath }}"
  {{- else -}}
  echo "Visit http://127.0.0.1:8080{{ .Values.transport.http.path }}"
  {{- end }}
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

{{- if eq .Values.transport.type "http-sse" }}
2. SSE-friendly ingress timeouts
   For NGINX Ingress, consider:
     nginx.ingress.kubernetes.io/proxy-read-timeout: 3600
     nginx.ingress.kubernetes.io/send-timeout: 3600
   For Gateway API, set listener/route timeouts accordingly.
{{- end }}
