# -- Provide a name in place of `inngest`
nameOverride: ""

# -- String to fully override `"inngest.fullname"`
fullnameOverride: ""

image:
  # -- image repository
  repository: inngest/inngest
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag
  tag: "v1.3.3"

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
# imagePullSecrets:
#   - name: regcred
imagePullSecrets: []

# -- Annotations to be added to the pods
podAnnotations: {}

# -- pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Number of replicas
replicaCount: 1

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 10

############################################
# Configuration for self-hosted Inngest
############################################
config:
  # -- Event key that the server uses for ingesting events.
  # In production, you can generate a random key with: `openssl rand -hex 16`
  # This key must be the same in your code that sends events to Inngest.
  eventKey: ""

  # -- Signing key for authenticating traffic between Inngest and your app.
  signingKey: ""

  # -- Set to "1" to skip requiring the event/signing keys, and run in dev mode. For production, typically "0".
  dev: "0"

  # -- If you want the server to use an external Redis, you can specify that here, otherwise leave empty string
  redisUri: ""

# -- Additional environment variables to be added to the pods.
extraEnv: []
# https://www.inngest.com/docs/self-hosting#configuration
# extraEnv:
#   - name: INNGEST_HOST
#     value: "0.0.0.0"
#   - name: INNGEST_POLL_INTERVAL
#     value: "60"
#   - name: INNGEST_RETRY_INTERVAL
#     value: "2"
#   - name: INNGEST_SDK_URL
#     value: "http://api1.com/api/inngest,http://api2.com/api/inngest"
#   - name: INNGEST_TICK
#     value: "150"
#   - name: INNGEST_LOG_LEVEL
#     value: "debug"
#   - name: INNGEST_VERBOSE
#     value: "true"

############################################
# Persistence for storing local data
############################################
persistence:
  # -- Whether to enable persistent storage for the Inngest server's data.
  # If enabled, a PersistentVolumeClaim (PVC) will be created and
  # mounted as /data in the container (or wherever the volumeMount is set).
  enabled: false

  # -- Name of a valid StorageClass on your cluster (e.g. "standard", "gp2").
  # If set to "-", Helm will generate a PVC without specifying a storageClassName
  # (useful if you rely on a default StorageClass).
  # If set to a valid StorageClass, that class is used explicitly.
  # Example: "standard", "gp2", "my-custom-class"
  storageClass: "-"

  # -- The size of the persistent volume requested, e.g. "1Gi", "5Gi", "10Gi".
  size: 1Gi

  # -- AccessModes define the way the volume can be accessed by the pods.
  # Common modes:
  #   - ReadWriteOnce  (RWO)
  #   - ReadWriteMany  (RWX)
  #   - ReadOnlyMany   (ROX)
  # Typically, ReadWriteOnce is enough for a single-node usage or simple setups.
  accessModes:
    - ReadWriteOnce

  # -- volumeMode defines how Kubernetes presents the underlying volume to a pod
  # If empty, it defaults to "Filesystem" (depending on the StorageClass/driver and K8s version).
  volumeMode: ""

  # -- Annotations to apply to the PVC itself. Useful for specifying
  # extra metadata, monitoring tags, or dynamic provisioning parameters.
  annotations: {}


# -- Resource limits and requests for the controller pods.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 8288

ingress:
  # -- Enable ingress record generation
  enabled: false
  # -- IngressClass that will be be used to implement the Ingress
  className: ""
  # -- Additional annotations for the Ingress resource
  annotations: {}
    # cert-manager.io/cluster-issuer: cluster-issuer-name
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- An array with hosts and paths
  # @default -- see [values.yaml](./values.yaml)
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- An array with the tls configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  # -- Enable Horizontal POD autoscaling
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 1
  # -- Maximum number of replicas
  maxReplicas: 100
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # -- Target Memory utilization percentage
  targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}
