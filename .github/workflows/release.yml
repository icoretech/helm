name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4.3.0

      - name: Prepare GPG key for signing
        run: |
          mkdir .cr-gpg
          echo "$GPG_KEYRING_BASE64" | base64 -d > .cr-gpg/secring.gpg
          echo "$GPG_PASSPHRASE" > .cr-gpg/passphrase
          echo "CR_KEYRING=.cr-gpg/secring.gpg" >> $GITHUB_ENV
          echo "CR_PASSPHRASE_FILE=.cr-gpg/passphrase" >> $GITHUB_ENV
        env:
          GPG_KEYRING_BASE64: ${{ secrets.GPG_KEYRING_BASE64 }}
          GPG_PASSPHRASE:    ${{ secrets.GPG_PASSPHRASE }}

      - name: Run chart-releaser (package & sign)
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: true
        env:
          CR_TOKEN:     ${{ secrets.GITHUB_TOKEN }}
          CR_KEY:       ${{ secrets.CR_KEY }}
          CR_SIGN:      true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Charts to GHCR (OCI)
        run: |
          if [ -d ".cr-release-packages" ]; then
            for pkg in .cr-release-packages/*; do
              [ -z "${pkg}" ] && break
              helm push "${pkg}" oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts
            done
          else
            echo "Directory .cr-release-packages does not exist."
          fi
